@page "/company/{Id:int}"

@using HackathonSite.Data

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="top-special">
    <div class="px-4" style="margin: 0.5em 4em 0em 4em;">
        @if (Company != null)
        {
            <h3>@Company.Name</h3>
            <h4>@Company.Location</h4>
        }
    </div>
</div>

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="content px-4">
        <div class="h-carousel slider">
            <div>Diversity Score</div>
            <div>ERGs</div>
            <div>D&amp;I Events</div>
            <div>Salaries</div>
        </div>

        <br />
        <br />
        <br />

        <div>
            <h4>
                @Page
            </h4>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc fringilla dignissim nisl sit amet congue. Nulla efficitur ante ligula, nec maximus sem lacinia interdum. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec eu mi eu lectus sollicitudin molestie vitae eu erat. Pellentesque pulvinar commodo dapibus. Cras urna felis, auctor vitae suscipit ut, ultrices vel tellus. Nunc urna orci, vulputate sed leo eu, porttitor hendrerit augue.
            </p>
        </div>
    </div>
</div>

@code
{
    [ParameterAttribute]
    public int Id { get; set; }

    public string Page { get; set; }

    public Company Company { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // default option
        await UpdateContent(0);
        // before I worry about database
        if (Id == 0)
        {
            Company = new Company
            {
                Id = 0,
                Name = "COMCAST CORPORATION",
                Location = "PHILADELPHIA, PA"
            };
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var dotNetReference = DotNetObjectReference.Create(this);
        await JSRuntime.InvokeVoidAsync("cacheReference", dotNetReference);

        await JSRuntime.InvokeVoidAsync("initCarousel");
    }

    [JSInvokable("UpdateContent")]
    public async Task UpdateContent(int currentSlide)
    {
        if (currentSlide == 0)
        {
            Page = "Diversity Score";
        }
        else if (currentSlide == 1)
        {
            Page = "ERGs";
        }
        else if (currentSlide == 2)
        {
            Page = "D&I Events";
        }
        else if (currentSlide == 3)
        {
            Page = "Salaries";
        }

        StateHasChanged();
    }
}
